import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

st.set_page_config(page_title="D·ª± ƒëo√°n gi√° gi·∫£m Amazon", layout="wide")
st.title("üìä D·ª± ƒëo√°n gi√° gi·∫£m s·∫£n ph·∫©m Amazon v·ªõi Linear Regression")

# ============================
# üì• B∆∞·ªõc 1: T·∫£i d·ªØ li·ªáu t·ª´ GitHub
# ============================
url = "https://raw.githubusercontent.com/nguyenvudev20/daidaidiha/refs/heads/main/amazon.csv"
df_raw = pd.read_csv(url)

st.subheader("üì• B∆∞·ªõc 1: D·ªØ li·ªáu g·ªëc (ch∆∞a x·ª≠ l√Ω)")
if st.checkbox("Xem d·ªØ li·ªáu g·ªëc"):
    st.dataframe(df_raw.head())

# ============================
# üßπ B∆∞·ªõc 2: Ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu
# ============================
st.subheader("üßπ B∆∞·ªõc 2: Ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu")

df = df_raw.copy()

st.markdown("**‚û§ L√†m s·∫°ch gi√° tr·ªã s·ªë (lo·∫°i b·ªè ‚Çπ, %, d·∫•u ph·∫©y):**")

df['discounted_price'] = pd.to_numeric(df['discounted_price'].str.replace('‚Çπ', '').str.replace(',', ''), errors='coerce')
df['actual_price'] = pd.to_numeric(df['actual_price'].str.replace('‚Çπ', '').str.replace(',', ''), errors='coerce')
df['discount_percentage'] = pd.to_numeric(df['discount_percentage'].str.replace('%', ''), errors='coerce')
df['rating'] = pd.to_numeric(df['rating'], errors='coerce')
df['rating_count'] = pd.to_numeric(df['rating_count'].str.replace(',', ''), errors='coerce')

st.code("""
df['discounted_price'] = pd.to_numeric(df['discounted_price'].str.replace('‚Çπ', '').str.replace(',', ''))
df['actual_price'] = pd.to_numeric(df['actual_price'].str.replace('‚Çπ', '').str.replace(',', ''))
df['discount_percentage'] = pd.to_numeric(df['discount_percentage'].str.replace('%', ''))
df['rating'] = pd.to_numeric(df['rating'])
df['rating_count'] = pd.to_numeric(df['rating_count'].str.replace(',', ''))
""", language="python")

st.markdown("**‚û§ Xo√° d√≤ng c√≥ gi√° tr·ªã thi·∫øu trong c√°c c·ªôt quan tr·ªçng:**")

missing = df[['discounted_price', 'actual_price', 'discount_percentage', 'rating', 'rating_count']].isnull().sum()
st.write("üîç S·ªë l∆∞·ª£ng gi√° tr·ªã thi·∫øu tr∆∞·ªõc khi xo√°:")
st.write(missing)

df.dropna(subset=['discounted_price', 'actual_price', 'discount_percentage', 'rating', 'rating_count'], inplace=True)

st.write("‚úÖ ƒê√£ xo√° d√≤ng c√≥ gi√° tr·ªã thi·∫øu.")
st.write(f"D·ªØ li·ªáu sau x·ª≠ l√Ω: {df.shape[0]} d√≤ng, {df.shape[1]} c·ªôt")

st.markdown("**‚û§ Tr√≠ch xu·∫•t danh m·ª•c ch√≠nh t·ª´ c·ªôt `category`:**")
df['main_category'] = df['category'].str.split('|').str[0]

# ============================
# üìà B∆∞·ªõc 3: Tr·ª±c quan h√≥a d·ªØ li·ªáu
# ============================
st.subheader("üìä B∆∞·ªõc 3: Tr·ª±c quan h√≥a d·ªØ li·ªáu")

fig1, ax1 = plt.subplots(figsize=(6, 4))
sns.histplot(df['rating'], bins=10, kde=True, ax=ax1)
ax1.set_title("1Ô∏è‚É£ Ph√¢n ph·ªëi ƒë√°nh gi√° s·∫£n ph·∫©m")
st.pyplot(fig1)

fig2, ax2 = plt.subplots(figsize=(6, 4))
sns.histplot(df['discount_percentage'], bins=20, color='orange', ax=ax2)
ax2.set_title("2Ô∏è‚É£ T·∫ßn su·∫•t c√°c m·ª©c gi·∫£m gi√° (%)")
st.pyplot(fig2)

fig3, ax3 = plt.subplots(figsize=(6, 4))
sns.scatterplot(x='actual_price', y='discounted_price', data=df, alpha=0.6, ax=ax3)
ax3.set_title("3Ô∏è‚É£ Gi√° g·ªëc vs Gi√° sau gi·∫£m")
st.pyplot(fig3)

top_categories = df['main_category'].value_counts().head(10)
fig4, ax4 = plt.subplots(figsize=(6, 4))
sns.barplot(x=top_categories.values, y=top_categories.index, ax=ax4)
ax4.set_title("4Ô∏è‚É£ Top 10 danh m·ª•c s·∫£n ph·∫©m ph·ªï bi·∫øn")
st.pyplot(fig4)

rating_by_cat = df.groupby('main_category')['rating'].mean().sort_values(ascending=False).head(10)
fig5, ax5 = plt.subplots(figsize=(6, 4))
sns.barplot(x=rating_by_cat.values, y=rating_by_cat.index, palette='viridis', ax=ax5)
ax5.set_title("5Ô∏è‚É£ Trung b√¨nh ƒë√°nh gi√° theo danh m·ª•c")
st.pyplot(fig5)

# ============================
# ü§ñ B∆∞·ªõc 4: Hu·∫•n luy·ªán m√¥ h√¨nh Linear Regression
# ============================
st.subheader("ü§ñ B∆∞·ªõc 4: Hu·∫•n luy·ªán m√¥ h√¨nh d·ª± ƒëo√°n gi√° gi·∫£m")

X = df[['actual_price', 'discount_percentage', 'rating', 'rating_count']]
y = df['discounted_price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

st.write(f"üìâ **Mean Squared Error (MSE):** {mse:,.2f}")
st.write(f"üìà **R-squared Score (R¬≤):** {r2:.4f}")

fig6, ax6 = plt.subplots(figsize=(6, 4))
sns.scatterplot(x=y_test, y=y_pred, alpha=0.5, ax=ax6)
ax6.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')
ax6.set_xlabel("Gi√° th·∫≠t")
ax6.set_ylabel("Gi√° d·ª± ƒëo√°n")
ax6.set_title("So s√°nh gi√° th·∫≠t v√† gi√° d·ª± ƒëo√°n")
st.pyplot(fig6)

